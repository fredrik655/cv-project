{"version":3,"sources":["components/ContactInfoEdit.js","components/ContactInfo.js","components/EducationComponents/EducationListEdit.js","components/EducationComponents/EducationList.js","components/EducationComponents/EducationEdit.js","components/Education.js","components/PracticalComponents/PracticalListEdit.js","components/PracticalComponents/PracticalList.js","components/PracticalComponents/PracticalEdit.js","components/Practical.js","App.js","index.js"],"names":["ContactInfoEdit","props","id","className","action","htmlFor","type","name","pattern","value","onClick","toggleFunc","renderFunc","state","edit","email","phone","ContactInfo","useState","setName","setEmail","setPhone","setEdit","ev","preventDefault","console","log","target","parentNode","querySelectorAll","siblings","table","validity","valid","EducationListEdit","data-key","propKey","defaultValue","schoolName","majorName","format","startDate","required","endDate","toggleEditCard","deleteCard","EducationList","EducationEdit","toggleEdit","add","returnJsxList","list","map","element","uniqid","Education","stateList","setStateList","setAdd","tempArr","push","valueAsDate","eventKey","getAttribute","forEach","inputs","index","i","splice","parseTasksToString","tasks","join","PracticalListEdit","companyName","jobTitle","placeholder","formatDistance","generateFullList","length","generateTaskList","e","PracticalList","PracticalEdit","parseTaskInput","input","split","Practical","textArea","querySelector","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dae3f3ad.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ContactInfoEdit = props => {\n  return (\n    <div id=\"contact-container\" className=\"info-container\">\n      <form action=\"\">\n        <label htmlFor=\"name-contact\">Full name</label>\n        <input type=\"text\" id=\"name-contact\" name=\"name-contact\" />\n\n        <label htmlFor=\"email-contact\">Email address</label>\n        <input type=\"email\" id=\"email-contact\" name=\"email-contact\" />\n\n        <label htmlFor=\"phone-contact\">Phone number ***-*****</label>\n        <input\n          type=\"tel\"\n          id=\"phone-contact\"\n          name=\"phone-contact\"\n          pattern=\"[0-9]{3}-[0-9]{5}\"\n        />\n\n        <button type=\"submit\" value=\"Submit\" onClick={props.toggleFunc}>\n          Edit Done\n        </button>\n      </form>\n    </div>\n  );\n}\n\n\nexport default ContactInfoEdit;\n","import React, { useState } from \"react\";\nimport ContactInfoEdit from \"./ContactInfoEdit\";\n\nconst ContactInfo = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n\n  const toggleEdit = ev => {\n    ev.preventDefault();\n    console.log(ev.target.parentNode.querySelectorAll(\"input\"));\n    if (ev.target.value === \"Submit\") {\n      const siblings = ev.target.parentNode.querySelectorAll(\"input\");\n      console.table(siblings[1].validity);\n      if (siblings[2].validity.valid && siblings[1].validity.valid) {\n        setName(siblings[0].value);\n        setEmail(siblings[1].value);\n        setPhone(siblings[2].value);\n        setEdit(false);\n      }\n    } else {\n      setEdit(true);\n    }\n  }\n\n  return renderFunc({name, email, phone, edit}, toggleEdit);\n}\n\n\nconst renderFunc = (state, toggleFunc) => {\n  if (state.edit === false) {\n    return (\n      <div id=\"contact-container\" className=\"info-container\">\n        <h2 id=\"contact-title\">Contact Info</h2>\n        <h2>Name:{state.name}</h2>\n        <h2>Email:{state.email}</h2>\n        <h2>Phone number:{state.phone}</h2>\n        <button onClick={toggleFunc}>Edit Info</button>\n      </div>\n    );\n  } else {\n    return <ContactInfoEdit toggleFunc={toggleFunc} />;\n  }\n};\n\nexport default ContactInfo;\n","import React from \"react\";\nimport { format } from \"date-fns\";\n\nconst EducationListEdit = props => {\n  return (\n    <div id=\"education-sub-edit-container\" className=\"info-container\" data-key={props.propKey}>\n      <form action=\"\">\n        <label htmlFor=\"school-name\">School name</label>\n        <input type=\"text\" id=\"school-name\" name=\"school-name\" defaultValue={props.state.schoolName}/>\n        \n\n        <label htmlFor=\"study-title\">Title of study</label>\n        <input type=\"text\" id=\"study-title\" name=\"study-title\" defaultValue={props.state.majorName}/>\n\n        <label htmlFor=\"start-date\">Start date</label>\n        <input type=\"date\" id=\"start-date\" name=\"start-date\"  defaultValue={format(props.state.startDate, 'yyyy-MM-dd')} required/>\n\n        <label htmlFor=\"end-date\">End date</label>\n        <input type=\"date\" id=\"end-date\" name=\"end-date\"  defaultValue={format(props.state.endDate, 'yyyy-MM-dd')}  required/>\n\n        <button type=\"submit\" value=\"Submit\" onClick={props.toggleEditCard}>\n          Edit Done\n        </button>\n      </form>\n    </div>\n  );\n}\n\n\nexport default EducationListEdit;","import React from \"react\";\nimport { format } from \"date-fns\";\nimport EducationListEdit from \"./EducationListEdit\";\n\n\nconst EducationList = props => {\n  return renderFunc(\n    props.state,\n    props.toggleEditCard,\n    props.deleteCard,\n  );\n}\n\nconst renderFunc = (state, toggleEditCard, deleteCard) => {\n  if (state.edit === false) {\n    return (\n      <div id=\"education-sub-container\" className=\"list-container\" data-key={state.id}>\n        <h2>School name: {state.schoolName}</h2>\n        <h2>Title of study: {state.majorName}</h2>\n        <h2>Start date: {format(state.startDate, \"MM/dd/yyyy\")}</h2>\n        <h2>End date: {format(state.endDate, \"MM/dd/yyyy\")}</h2>\n        <button onClick={toggleEditCard}>Edit</button>\n        <button onClick={deleteCard}>Delete</button>\n      </div>\n    );\n  } else {\n    return <EducationListEdit state={state} toggleEditCard={toggleEditCard} propKey={state.id}/>;\n  }\n};\n\nexport default EducationList;\n","import React from \"react\";\n\n\nconst EducationEdit = props => {\n  return (\n    <div id=\"Education-container\" className=\"info-container\">\n      <form action=\"\">\n        <label htmlFor=\"school-name\">School name</label>\n        <input type=\"text\" id=\"school-name\" name=\"school-name\" />\n\n        <label htmlFor=\"study-title\">Title of study</label>\n        <input type=\"text\" id=\"study-title\" name=\"study-title\" />\n\n        <label htmlFor=\"start-date\">Start date</label>\n        <input type=\"date\" id=\"start-date\" name=\"start-date\" required/>\n\n        <label htmlFor=\"end-date\">End date</label>\n        <input type=\"date\" id=\"end-date\" name=\"end-date\" required/>\n\n        <button type=\"submit\" value=\"Submit\" onClick={props.toggleEdit}>\n          Edit Done\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default EducationEdit;\n","import React, { useState } from \"react\";\nimport EducationList from \"./EducationComponents/EducationList\";\nimport EducationEdit from \"./EducationComponents/EducationEdit\";\nimport uniqid from \"uniqid\";\n\nconst Education = () => {\n  const [stateList, setStateList] = useState([]);\n  const [add, setAdd] = useState(false);\n\n  const deleteCard = ev => {\n    const eventKey = ev.target.parentNode.getAttribute('data-key');\n    const list = [...stateList];\n    let index = 0;\n\n    list.forEach((element, i) => {\n      if(element.id === eventKey){\n        index = i;\n      }\n    });\n\n    list.splice(index, 1);\n    setStateList(list);\n    setAdd(false); \n  }\n\n  const toggleEdit = ev => {\n    ev.preventDefault();\n    if (ev.target.value === \"Submit\") {\n      const siblings = ev.target.parentNode.querySelectorAll(\"input\");\n      if (siblings[2].validity.valid && siblings[3].validity.valid) {\n        const tempArr = [...stateList];\n        tempArr.push({\n          id: uniqid(),\n          schoolName: siblings[0].value,\n          majorName: siblings[1].value,\n          startDate: siblings[2].valueAsDate,\n          endDate: siblings[3].valueAsDate,\n          edit: false,\n        });\n        setStateList(tempArr);\n        setAdd(false);\n      }\n    } else {\n      setAdd(true);\n    }\n  }\n\n  const toggleEditCard = ev => {\n    ev.preventDefault();\n    if(ev.target.value !== 'Submit'){\n      const eventKey = ev.target.parentNode.getAttribute('data-key');\n      const tempArr = [...stateList];\n      tempArr.forEach(element => {\n        if(element.id === eventKey){\n          element.edit = true;\n        }\n      });\n      setStateList(tempArr);\n      setAdd(false);\n    }\n    else {\n      const eventKey = ev.target.parentNode.parentNode.getAttribute('data-key');\n      const inputs = ev.target.parentNode.querySelectorAll('input');\n      if(inputs[2].validity.valid && inputs[3].validity.valid){\n        const tempArr = [...stateList];\n        tempArr.forEach(element => {\n          if(element.id === eventKey){\n            element.schoolName = inputs[0].value;\n            element.majorName = inputs[1].value;\n            element.startDate = inputs[2].valueAsDate;\n            element.endDate = inputs[3].valueAsDate;\n            element.edit = false;\n          }\n        });\n        setStateList(tempArr);\n        setAdd(false);\n      }  \n    }\n  }\n\n  return renderFunc({list: stateList, add}, toggleEdit, toggleEditCard, deleteCard);\n\n}\n\n\nconst renderFunc = (state, toggleEdit, toggleEditCard, deleteCard) => {\n  if (state.add === false) {\n    return (\n      <div id=\"education-container\" className=\"info-container\">\n        <h2>Education</h2>\n        {returnJsxList(state.list, toggleEditCard, deleteCard)}\n        <button onClick={toggleEdit}>Add new</button>\n      </div>\n    );\n  } else {\n    return (\n      <EducationEdit toggleEdit={toggleEdit} toggleEditCard={toggleEditCard} />\n    );\n  }\n};\n\nconst returnJsxList = (list, toggleEditCard, deleteCard) => {\n  return list.map((element) => {\n    return (\n      <EducationList\n        key={uniqid()}\n        state={element}\n        toggleEditCard={toggleEditCard}\n        deleteCard={deleteCard}\n      />\n    );\n  });\n};\n\nexport default Education;\n","import React from \"react\";\nimport { format } from \"date-fns\";\n\n\n\nconst PracticalListEdit = (props) => {\n  return (\n    <div id=\"practical-sub-edit-container\" className=\"list-container\" data-key={props.propKey}>\n      <form action=\"\">\n        <label htmlFor=\"company-name\">Company Name</label>\n        <input type=\"text\" id=\"company-name\" name=\"company-name\" defaultValue={props.state.companyName}/>\n        \n        <label htmlFor=\"job-title\">Job Title</label>\n        <input type=\"text\" id=\"job-title\" name=\"job-title\" defaultValue={props.state.jobTitle}/>\n\n        <label htmlFor=\"start-date\">Start date</label>\n        <input type=\"date\" id=\"start-date\" name=\"start-date\" defaultValue={format(props.state.startDate, 'yyyy-MM-dd')} required/>\n\n        <label htmlFor=\"end-date\">End date</label>\n        <input type=\"date\" id=\"end-date\" name=\"end-date\"  defaultValue={format(props.state.endDate, 'yyyy-MM-dd')} required/>\n\n        <label htmlFor=\"tasks\">Main job tasks</label>\n        <textarea type=\"text\" id=\"tasks\" name=\"tasks\" defaultValue={parseTasksToString(props.state.tasks)} placeholder=\"Comma separate tasks ie: task1,task2,task3\"/>\n\n        <button type=\"submit\" value=\"Submit\" onClick={props.toggleEditCard} >\n          Edit Done\n        </button>\n      </form>\n    </div>\n  );\n}\n\nconst parseTasksToString = tasks => {\n  return tasks.join();\n}\n\nexport default PracticalListEdit;","import React from \"react\";\nimport { format, formatDistance } from \"date-fns\";\nimport PracticalListEdit from './PracticalListEdit';\nimport uniqid from 'uniqid';\n\nconst PracticalList = props => {\n  return renderFunc(\n    props.state,\n    props.toggleEditCard,\n    props.deleteCard,\n  );\n}\n\nconst renderFunc = (state, toggleEditCard, deleteCard) => {\n  if (state.edit === false) {\n    return (\n      <div id=\"practical-sub-container\" className=\"list-container\" data-key={state.id}>\n        <h2>Company Name: {state.companyName}</h2>\n        <h2>Job Title: {state.jobTitle}</h2>\n        <h2>Start date: {format(state.startDate, 'dd-MM-yyyy')}</h2>\n        <h2>End date: {format(state.endDate, 'dd-MM-yyyy')}</h2>\n        <h2>Work duration: {formatDistance(state.startDate, state.endDate)}</h2>\n        {generateFullList(state.tasks)}\n        <button onClick={toggleEditCard}>Edit</button>\n        <button onClick={deleteCard}>Delete</button>\n      </div>\n    );\n  } \n  else {\n    return <PracticalListEdit state={state} toggleEditCard={toggleEditCard} propKey={state.id}/>;\n  }\n};\n\nconst generateFullList = tasks => {\n  if(tasks.length > 0){\n    return (\n      <ul>\n        Work tasks:\n        {generateTaskList(tasks)}\n      </ul>\n    );\n  }\n}\n\nconst generateTaskList = tasks => {\n  return tasks.map(e => {\n    return <li key={uniqid()}>{e}</li>;\n  })\n}\n\nexport default PracticalList;","import React from \"react\";\n\n\nconst PracticalEdit = props => {\n  return (\n    <div id=\"practical-container\" className=\"info-container\">\n      <form action=\"\">\n        <label htmlFor=\"company-name\">Company Name</label>\n        <input type=\"text\" id=\"company-name\" name=\"company-name\" />\n\n        <label htmlFor=\"job-title\">Job Title</label>\n        <input type=\"text\" id=\"job-title\" name=\"job-title\" />\n\n        <label htmlFor=\"start-date\">Start date</label>\n        <input type=\"date\" id=\"start-date\" name=\"start-date\" required/>\n\n        <label htmlFor=\"end-date\">End date</label>\n        <input type=\"date\" id=\"end-date\" name=\"end-date\" required/>\n\n        <label htmlFor=\"tasks\">Main job tasks</label>\n        <textarea type=\"text\" id=\"tasks\" name=\"tasks\" placeholder=\"Comma separate tasks ie: task1,task2,task3\"/>\n\n        <button type=\"submit\" value=\"Submit\" onClick={props.toggleEdit} >\n          Edit Done\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default PracticalEdit;\n","import React, { useState } from \"react\";\nimport PracticalList from './PracticalComponents/PracticalList';\nimport uniqid from 'uniqid';\nimport PracticalEdit from \"./PracticalComponents/PracticalEdit\";\n\nconst Practical = () => {\n  const [stateList, setStateList] = useState([]);\n  const [add, setAdd] = useState(false);\n\n  const deleteCard = ev => {\n    const eventKey = ev.target.parentNode.getAttribute('data-key');\n    const list = [...stateList];\n    let index = 0;\n\n    list.forEach((element, i) => {\n      if(element.id === eventKey){\n        index = i;\n      }\n    });\n\n    list.splice(index, 1);\n    setStateList(list);\n    setAdd(false); \n  }\n\n  const toggleEdit = ev => {\n    ev.preventDefault();\n    if (ev.target.value === \"Submit\") {\n      const siblings = ev.target.parentNode.querySelectorAll(\"input\");\n      const textArea = ev.target.parentNode.querySelector('textarea');\n      if (siblings[2].validity.valid && siblings[3].validity.valid) {\n        const tempArr = [...stateList];\n        tempArr.push({\n          id: uniqid(),\n          companyName: siblings[0].value,\n          jobTitle: siblings[1].value,\n          startDate: siblings[2].valueAsDate,\n          endDate: siblings[3].valueAsDate,\n          tasks: parseTaskInput(textArea.value),\n          edit: false,\n        });\n        setStateList(tempArr);\n        setAdd(false);\n      }\n    } else {\n      setAdd(true);\n    }\n  }\n\n  const toggleEditCard = ev => {\n    ev.preventDefault();\n    if(ev.target.value !== 'Submit'){\n      const eventKey = ev.target.parentNode.getAttribute('data-key');\n        const tempArr = [...stateList];\n        tempArr.forEach(element => {\n          if(element.id === eventKey){\n            element.edit = true;\n          }\n        });\n        setStateList(tempArr);\n        setAdd(false)\n      }\n    else {\n        const eventKey = ev.target.parentNode.parentNode.getAttribute('data-key');\n        const inputs = ev.target.parentNode.querySelectorAll('input');\n        const textArea = ev.target.parentNode.querySelector('textarea');\n        if(inputs[2].validity.valid && inputs[3].validity.valid){\n          const tempArr = [...stateList];\n          tempArr.forEach(element => {\n            if(element.id === eventKey){\n              element.companyName = inputs[0].value;\n              element.jobTitle = inputs[1].value;\n              element.startDate = inputs[2].valueAsDate;\n              element.endDate = inputs[3].valueAsDate;\n              element.tasks = parseTaskInput(textArea.value);\n              element.edit = false;\n            }\n          });\n          setStateList(tempArr);\n          setAdd(false);\n        }\n    }\n  }\n\n  return renderFunc({list: stateList, add}, toggleEdit, toggleEditCard, deleteCard);\n}\n\nconst renderFunc = (state, toggleEdit, toggleEditCard, deleteCard) => {\n  if(state.add === false){\n    return (\n      <div id=\"practical-container\" className=\"info-container\">\n        <h2>Previous Jobs</h2>\n        {returnJsxList(state.list, toggleEditCard, deleteCard)}\n        <button onClick={toggleEdit}>Add new</button>\n      </div>\n    );\n  }\n  else {\n    return <PracticalEdit toggleEdit={toggleEdit}/>;\n  }\n};\n\nconst parseTaskInput = input => {\n  if(input !== ''){\n    return input.split(',');\n  }\n  else {\n    return [];\n  }\n}\n\nconst returnJsxList = (list, toggleEditCard, deleteCard) => {\n  return list.map((element) => {\n    return (\n      <PracticalList\n        key={uniqid()}\n        state={element}\n        toggleEditCard={toggleEditCard}\n        deleteCard={deleteCard}\n      />\n    );\n  });\n};\n\nexport default Practical;\n","import React from \"react\";\nimport ContactInfo from \"./components/ContactInfo\";\nimport Education from \"./components/Education\";\nimport Practical from \"./components/Practical\";\n\n\nconst App = () => {\n  return (\n    <div id=\"cv-container\">\n      <h1>CV Builder</h1>\n      <ContactInfo />\n      <Education />\n      <Practical />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}