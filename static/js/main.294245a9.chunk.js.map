{"version":3,"sources":["components/ContactInfoEdit.js","components/ContactInfo.js","components/EducationComponents/EducationListEdit.js","components/EducationComponents/EducationList.js","components/EducationComponents/EducationEdit.js","components/Education.js","components/PracticalComponents/PracticalListEdit.js","components/PracticalComponents/PracticalList.js","components/PracticalComponents/PracticalEdit.js","components/Practical.js","App.js","index.js"],"names":["ContactInfoEdit","id","className","action","htmlFor","type","name","pattern","value","onClick","this","props","toggleFunc","Component","ContactInfo","state","email","phone","edit","toggleEdit","bind","ev","preventDefault","console","log","target","parentNode","querySelectorAll","siblings","table","validity","valid","setState","renderFunc","EducationListEdit","data-key","propKey","defaultValue","schoolName","majorName","format","startDate","required","endDate","toggleEditCard","EducationList","deleteCard","EducationEdit","Education","list","add","eventKey","getAttribute","index","forEach","element","i","splice","tempArr","push","uniqid","valueAsDate","inputs","returnJsxList","map","PracticalListEdit","companyName","jobTitle","parseTasksToString","tasks","placeholder","join","PracticalList","formatDistance","generateFullList","length","generateTaskList","e","PracticalEdit","Practical","textArea","querySelector","parseTaskInput","input","split","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.294245a9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass ContactInfoEdit extends Component {\n  render() {\n    return (\n      <div id=\"contact-container\" className=\"info-container\">\n        <form action=\"\">\n          <label htmlFor=\"name-contact\">Full name</label>\n          <input type=\"text\" id=\"name-contact\" name=\"name-contact\" />\n\n          <label htmlFor=\"email-contact\">Email address</label>\n          <input type=\"email\" id=\"email-contact\" name=\"email-contact\" />\n\n          <label htmlFor=\"phone-contact\">Phone number ***-*****</label>\n          <input\n            type=\"tel\"\n            id=\"phone-contact\"\n            name=\"phone-contact\"\n            pattern=\"[0-9]{3}-[0-9]{5}\"\n          />\n\n          <button type=\"submit\" value=\"Submit\" onClick={this.props.toggleFunc}>\n            Edit Done\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactInfoEdit;\n","import React, { Component } from \"react\";\nimport ContactInfoEdit from \"./ContactInfoEdit\";\n\nclass ContactInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      edit: false,\n    };\n\n    this.toggleEdit = this.toggleEdit.bind(this);\n  }\n\n  toggleEdit(ev) {\n    ev.preventDefault();\n    console.log(ev.target.parentNode.querySelectorAll(\"input\"));\n    if (ev.target.value === \"Submit\") {\n      const siblings = ev.target.parentNode.querySelectorAll(\"input\");\n      console.table(siblings[1].validity);\n      if (siblings[2].validity.valid && siblings[1].validity.valid) {\n        this.setState({\n          name: siblings[0].value,\n          email: siblings[1].value,\n          phone: siblings[2].value,\n          edit: false,\n        });\n      }\n    } else {\n      this.setState({ edit: true });\n    }\n  }\n\n  render() {\n    return renderFunc(this.state, this.toggleEdit);\n  }\n}\n\nconst renderFunc = (state, toggleFunc) => {\n  if (state.edit === false) {\n    return (\n      <div id=\"contact-container\" className=\"info-container\">\n        <h2 id=\"contact-title\">Contact Info</h2>\n        <h2>Name:{state.name}</h2>\n        <h2>Email:{state.email}</h2>\n        <h2>Phone number:{state.phone}</h2>\n        <button onClick={toggleFunc}>Edit Info</button>\n      </div>\n    );\n  } else {\n    return <ContactInfoEdit toggleFunc={toggleFunc} />;\n  }\n};\n\nexport default ContactInfo;\n","import React, { Component } from \"react\";\nimport { format } from \"date-fns\";\n\nclass EducationListEdit extends Component {\n  render() {\n    return (\n      <div id=\"education-sub-edit-container\" className=\"info-container\" data-key={this.props.propKey}>\n        <form action=\"\">\n          <label htmlFor=\"school-name\">School name</label>\n          <input type=\"text\" id=\"school-name\" name=\"school-name\" defaultValue={this.props.state.schoolName}/>\n          \n\n          <label htmlFor=\"study-title\">Title of study</label>\n          <input type=\"text\" id=\"study-title\" name=\"study-title\" defaultValue={this.props.state.majorName}/>\n\n          <label htmlFor=\"start-date\">Start date</label>\n          <input type=\"date\" id=\"start-date\" name=\"start-date\"  defaultValue={format(this.props.state.startDate, 'yyyy-MM-dd')} required/>\n\n          <label htmlFor=\"end-date\">End date</label>\n          <input type=\"date\" id=\"end-date\" name=\"end-date\"  defaultValue={format(this.props.state.endDate, 'yyyy-MM-dd')}  required/>\n\n          <button type=\"submit\" value=\"Submit\" onClick={this.props.toggleEditCard}>\n            Edit Done\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EducationListEdit;","import React, { Component } from \"react\";\nimport { format } from \"date-fns\";\nimport EducationListEdit from \"./EducationListEdit\";\n\nclass EducationList extends Component {\n  render() {\n    return renderFunc(\n      this.props.state,\n      this.props.toggleEditCard,\n      this.props.deleteCard,\n    );\n  }\n}\n\nconst renderFunc = (state, toggleEditCard, deleteCard) => {\n  if (state.edit === false) {\n    return (\n      <div id=\"education-sub-container\" className=\"list-container\" data-key={state.id}>\n        <h2>School name: {state.schoolName}</h2>\n        <h2>Title of study: {state.majorName}</h2>\n        <h2>Start date: {format(state.startDate, \"MM/dd/yyyy\")}</h2>\n        <h2>End date: {format(state.endDate, \"MM/dd/yyyy\")}</h2>\n        <button onClick={toggleEditCard}>Edit</button>\n        <button onClick={deleteCard}>Delete</button>\n      </div>\n    );\n  } else {\n    return <EducationListEdit state={state} toggleEditCard={toggleEditCard} propKey={state.id}/>;\n  }\n};\n\nexport default EducationList;\n","import React, { Component } from \"react\";\n\nclass EducationEdit extends Component {\n  render() {\n    return (\n      <div id=\"Education-container\" className=\"info-container\">\n        <form action=\"\">\n          <label htmlFor=\"school-name\">School name</label>\n          <input type=\"text\" id=\"school-name\" name=\"school-name\" />\n\n          <label htmlFor=\"study-title\">Title of study</label>\n          <input type=\"text\" id=\"study-title\" name=\"study-title\" />\n\n          <label htmlFor=\"start-date\">Start date</label>\n          <input type=\"date\" id=\"start-date\" name=\"start-date\" required/>\n\n          <label htmlFor=\"end-date\">End date</label>\n          <input type=\"date\" id=\"end-date\" name=\"end-date\" required/>\n\n          <button type=\"submit\" value=\"Submit\" onClick={this.props.toggleEdit}>\n            Edit Done\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EducationEdit;\n","import React, { Component } from \"react\";\nimport EducationList from \"./EducationComponents/EducationList\";\nimport EducationEdit from \"./EducationComponents/EducationEdit\";\nimport uniqid from \"uniqid\";\n\nclass Education extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [\n        \n      ],\n      add: false,\n    };\n\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.toggleEditCard = this.toggleEditCard.bind(this);\n    this.deleteCard = this.deleteCard.bind(this);\n  }\n\n  deleteCard(ev) {\n    const eventKey = ev.target.parentNode.getAttribute('data-key');\n    this.setState(state => {\n      const list = [...state.list];\n      let index = 0;\n      list.forEach((element, i) => {\n        if(element.id === eventKey){\n          index = i;\n        }\n      });\n      list.splice(index, 1);\n      return {list: list, add: false};\n    })\n  }\n\n  toggleEdit(ev) {\n    ev.preventDefault();\n    if (ev.target.value === \"Submit\") {\n      const siblings = ev.target.parentNode.querySelectorAll(\"input\");\n      if (siblings[2].validity.valid && siblings[3].validity.valid) {\n        this.setState((state) => {\n          const tempArr = [...state.list];\n          tempArr.push({\n            id: uniqid(),\n            schoolName: siblings[0].value,\n            majorName: siblings[1].value,\n            startDate: siblings[2].valueAsDate,\n            endDate: siblings[3].valueAsDate,\n            edit: false,\n          });\n          return { list: tempArr, add: false };\n        });\n      }\n    } else {\n      this.setState({ add: true });\n    }\n  }\n\n  toggleEditCard(ev) {\n    ev.preventDefault();\n    if(ev.target.value !== 'Submit'){\n      const eventKey = ev.target.parentNode.getAttribute('data-key');\n      this.setState(state => {\n        const tempArr = [...state.list];\n        tempArr.forEach(element => {\n          if(element.id === eventKey){\n            element.edit = true;\n          }\n        });\n        return {list: tempArr, add: false};\n      });\n    }\n    else {\n      this.setState(state => {\n        const eventKey = ev.target.parentNode.parentNode.getAttribute('data-key');\n        const inputs = ev.target.parentNode.querySelectorAll('input');\n        if(inputs[2].validity.valid && inputs[3].validity.valid){\n          const tempArr = [...state.list];\n          tempArr.forEach(element => {\n            if(element.id === eventKey){\n              element.schoolName = inputs[0].value;\n              element.majorName = inputs[1].value;\n              element.startDate = inputs[2].valueAsDate;\n              element.endDate = inputs[3].valueAsDate;\n              element.edit = false;\n            }\n          });\n          return {list: tempArr, add: false};\n        }\n        \n      });\n    }\n    \n  }\n\n  render() {\n    return renderFunc(this.state, this.toggleEdit, this.toggleEditCard, this.deleteCard);\n  }\n}\n\nconst renderFunc = (state, toggleEdit, toggleEditCard, deleteCard) => {\n  if (state.add === false) {\n    return (\n      <div id=\"education-container\" className=\"info-container\">\n        <h2>Education</h2>\n        {returnJsxList(state.list, toggleEditCard, deleteCard)}\n        <button onClick={toggleEdit}>Add new</button>\n      </div>\n    );\n  } else {\n    return (\n      <EducationEdit toggleEdit={toggleEdit} toggleEditCard={toggleEditCard} />\n    );\n  }\n};\n\nconst returnJsxList = (list, toggleEditCard, deleteCard) => {\n  return list.map((element) => {\n    return (\n      <EducationList\n        key={uniqid()}\n        state={element}\n        toggleEditCard={toggleEditCard}\n        deleteCard={deleteCard}\n      />\n    );\n  });\n};\n\nexport default Education;\n","import React, { Component } from \"react\";\nimport { format } from \"date-fns\";\n\nclass PracticalListEdit extends Component {\n  render() {\n    return (\n      <div id=\"practical-sub-edit-container\" className=\"list-container\" data-key={this.props.propKey}>\n        <form action=\"\">\n          <label htmlFor=\"company-name\">Company Name</label>\n          <input type=\"text\" id=\"company-name\" name=\"company-name\" defaultValue={this.props.state.companyName}/>\n          \n          <label htmlFor=\"job-title\">Job Title</label>\n          <input type=\"text\" id=\"job-title\" name=\"job-title\" defaultValue={this.props.state.jobTitle}/>\n\n          <label htmlFor=\"start-date\">Start date</label>\n          <input type=\"date\" id=\"start-date\" name=\"start-date\" defaultValue={format(this.props.state.startDate, 'yyyy-MM-dd')} required/>\n\n          <label htmlFor=\"end-date\">End date</label>\n          <input type=\"date\" id=\"end-date\" name=\"end-date\"  defaultValue={format(this.props.state.endDate, 'yyyy-MM-dd')} required/>\n\n          <label htmlFor=\"tasks\">Main job tasks</label>\n          <textarea type=\"text\" id=\"tasks\" name=\"tasks\" defaultValue={parseTasksToString(this.props.state.tasks)} placeholder=\"Comma separate tasks ie: task1,task2,task3\"/>\n\n          <button type=\"submit\" value=\"Submit\" onClick={this.props.toggleEditCard} >\n            Edit Done\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst parseTasksToString = tasks => {\n  return tasks.join();\n}\n\nexport default PracticalListEdit;","import React, { Component } from \"react\";\nimport { format, formatDistance } from \"date-fns\";\nimport PracticalListEdit from './PracticalListEdit';\nimport uniqid from 'uniqid';\n\nclass PracticalList extends Component {\n  render() {\n    return renderFunc(\n      this.props.state,\n      this.props.toggleEditCard,\n      this.props.deleteCard,\n    );\n  }\n}\n\nconst renderFunc = (state, toggleEditCard, deleteCard) => {\n  if (state.edit === false) {\n    return (\n      <div id=\"practical-sub-container\" className=\"list-container\" data-key={state.id}>\n        <h2>Company Name: {state.companyName}</h2>\n        <h2>Job Title: {state.jobTitle}</h2>\n        <h2>Start date: {format(state.startDate, 'dd-MM-yyyy')}</h2>\n        <h2>End date: {format(state.endDate, 'dd-MM-yyyy')}</h2>\n        <h2>Work duration: {formatDistance(state.startDate, state.endDate)}</h2>\n        {generateFullList(state.tasks)}\n        <button onClick={toggleEditCard}>Edit</button>\n        <button onClick={deleteCard}>Delete</button>\n      </div>\n    );\n  } \n  else {\n    return <PracticalListEdit state={state} toggleEditCard={toggleEditCard} propKey={state.id}/>;\n  }\n};\n\nconst generateFullList = tasks => {\n  if(tasks.length > 0){\n    return (\n      <ul>\n        Work tasks:\n        {generateTaskList(tasks)}\n      </ul>\n    );\n  }\n}\n\nconst generateTaskList = tasks => {\n  return tasks.map(e => {\n    return <li key={uniqid()}>{e}</li>;\n  })\n}\n\nexport default PracticalList;","import React, { Component } from \"react\";\n\nclass PracticalEdit extends Component {\n  render() {\n    return (\n      <div id=\"practical-container\" className=\"info-container\">\n        <form action=\"\">\n          <label htmlFor=\"company-name\">Company Name</label>\n          <input type=\"text\" id=\"company-name\" name=\"company-name\" />\n\n          <label htmlFor=\"job-title\">Job Title</label>\n          <input type=\"text\" id=\"job-title\" name=\"job-title\" />\n\n          <label htmlFor=\"start-date\">Start date</label>\n          <input type=\"date\" id=\"start-date\" name=\"start-date\" required/>\n\n          <label htmlFor=\"end-date\">End date</label>\n          <input type=\"date\" id=\"end-date\" name=\"end-date\" required/>\n\n          <label htmlFor=\"tasks\">Main job tasks</label>\n          <textarea type=\"text\" id=\"tasks\" name=\"tasks\" placeholder=\"Comma separate tasks ie: task1,task2,task3\"/>\n\n          <button type=\"submit\" value=\"Submit\" onClick={this.props.toggleEdit} >\n            Edit Done\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PracticalEdit;\n","import React, { Component } from \"react\";\nimport PracticalList from './PracticalComponents/PracticalList';\nimport uniqid from 'uniqid';\nimport PracticalEdit from \"./PracticalComponents/PracticalEdit\";\n\nclass Practical extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      list: [\n      ],\n      add: false,\n    }\n\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.toggleEditCard = this.toggleEditCard.bind(this);\n    this.deleteCard = this.deleteCard.bind(this);\n  }\n\n  deleteCard(ev) {\n    const eventKey = ev.target.parentNode.getAttribute('data-key');\n    this.setState(state => {\n      const list = [...state.list];\n      let index = 0;\n      list.forEach((element, i) => {\n        if(element.id === eventKey){\n          index = i;\n        }\n      });\n      list.splice(index, 1);\n      return {list: list, add: false};\n    })\n  }\n\n  toggleEdit(ev) {\n    ev.preventDefault();\n    if (ev.target.value === \"Submit\") {\n      const siblings = ev.target.parentNode.querySelectorAll(\"input\");\n      const textArea = ev.target.parentNode.querySelector('textarea');\n      if (siblings[2].validity.valid && siblings[3].validity.valid) {\n        this.setState((state) => {\n          const tempArr = [...state.list];\n          tempArr.push({\n            id: uniqid(),\n            companyName: siblings[0].value,\n            jobTitle: siblings[1].value,\n            startDate: siblings[2].valueAsDate,\n            endDate: siblings[3].valueAsDate,\n            tasks: parseTaskInput(textArea.value),\n            edit: false,\n          });\n          return { list: tempArr, add: false };\n        });\n      }\n    } else {\n      this.setState({ add: true });\n    }\n  }\n\n  toggleEditCard(ev) {\n    ev.preventDefault();\n    if(ev.target.value !== 'Submit'){\n      const eventKey = ev.target.parentNode.getAttribute('data-key');\n      this.setState(state => {\n        const tempArr = [...state.list];\n        tempArr.forEach(element => {\n          if(element.id === eventKey){\n            element.edit = true;\n          }\n        });\n        return {list: tempArr, add: false};\n      });\n    }\n    else {\n      this.setState(state => {\n        const eventKey = ev.target.parentNode.parentNode.getAttribute('data-key');\n        const inputs = ev.target.parentNode.querySelectorAll('input');\n        const textArea = ev.target.parentNode.querySelector('textarea');\n        if(inputs[2].validity.valid && inputs[3].validity.valid){\n          const tempArr = [...state.list];\n          tempArr.forEach(element => {\n            if(element.id === eventKey){\n              element.companyName = inputs[0].value;\n              element.jobTitle = inputs[1].value;\n              element.startDate = inputs[2].valueAsDate;\n              element.endDate = inputs[3].valueAsDate;\n              element.tasks = parseTaskInput(textArea.value);\n              element.edit = false;\n            }\n          });\n          return {list: tempArr, add: false};\n        }\n        \n      });\n    }\n    \n  }\n\n  render() {\n    console.log(this.state);\n    return renderFunc(this.state, this.toggleEdit, this.toggleEditCard, this.deleteCard);\n  }\n  \n}\n\nconst renderFunc = (state, toggleEdit, toggleEditCard, deleteCard) => {\n  if(state.add === false){\n    return (\n      <div id=\"practical-container\" className=\"info-container\">\n        <h2>Previous Jobs</h2>\n        {returnJsxList(state.list, toggleEditCard, deleteCard)}\n        <button onClick={toggleEdit}>Add new</button>\n      </div>\n    );\n  }\n  else {\n    return <PracticalEdit toggleEdit={toggleEdit}/>;\n  }\n};\n\nconst parseTaskInput = input => {\n  if(input !== ''){\n    return input.split(',');\n  }\n  else {\n    return [];\n  }\n}\n\nconst returnJsxList = (list, toggleEditCard, deleteCard) => {\n  return list.map((element) => {\n    return (\n      <PracticalList\n        key={uniqid()}\n        state={element}\n        toggleEditCard={toggleEditCard}\n        deleteCard={deleteCard}\n      />\n    );\n  });\n};\n\nexport default Practical;\n","import React, { Component } from \"react\";\nimport ContactInfo from \"./components/ContactInfo\";\nimport Education from \"./components/Education\";\nimport Practical from \"./components/Practical\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"cv-container\">\n        <h1>CV Builder</h1>\n        <ContactInfo />\n        <Education />\n        <Practical />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}